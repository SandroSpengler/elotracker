//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var SummonerNameHistory = newSummonerNameHistoryTable("public", "summoner_name_history", "")

type summonerNameHistoryTable struct {
	postgres.Table

	// Columns
	Puuid      postgres.ColumnString
	GameName   postgres.ColumnString
	TagLine    postgres.ColumnString
	RenameDate postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type SummonerNameHistoryTable struct {
	summonerNameHistoryTable

	EXCLUDED summonerNameHistoryTable
}

// AS creates new SummonerNameHistoryTable with assigned alias
func (a SummonerNameHistoryTable) AS(alias string) *SummonerNameHistoryTable {
	return newSummonerNameHistoryTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SummonerNameHistoryTable with assigned schema name
func (a SummonerNameHistoryTable) FromSchema(schemaName string) *SummonerNameHistoryTable {
	return newSummonerNameHistoryTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SummonerNameHistoryTable with assigned table prefix
func (a SummonerNameHistoryTable) WithPrefix(prefix string) *SummonerNameHistoryTable {
	return newSummonerNameHistoryTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SummonerNameHistoryTable with assigned table suffix
func (a SummonerNameHistoryTable) WithSuffix(suffix string) *SummonerNameHistoryTable {
	return newSummonerNameHistoryTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSummonerNameHistoryTable(schemaName, tableName, alias string) *SummonerNameHistoryTable {
	return &SummonerNameHistoryTable{
		summonerNameHistoryTable: newSummonerNameHistoryTableImpl(schemaName, tableName, alias),
		EXCLUDED:                 newSummonerNameHistoryTableImpl("", "excluded", ""),
	}
}

func newSummonerNameHistoryTableImpl(schemaName, tableName, alias string) summonerNameHistoryTable {
	var (
		PuuidColumn      = postgres.StringColumn("puuid")
		GameNameColumn   = postgres.StringColumn("game_name")
		TagLineColumn    = postgres.StringColumn("tag_line")
		RenameDateColumn = postgres.TimestampColumn("rename_date")
		allColumns       = postgres.ColumnList{PuuidColumn, GameNameColumn, TagLineColumn, RenameDateColumn}
		mutableColumns   = postgres.ColumnList{GameNameColumn, TagLineColumn}
	)

	return summonerNameHistoryTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Puuid:      PuuidColumn,
		GameName:   GameNameColumn,
		TagLine:    TagLineColumn,
		RenameDate: RenameDateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
